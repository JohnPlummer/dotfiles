# gitconfig
[user]
    name = John Plummer
    email = john@memphis.co.uk
    signingkey = 21863237ECE91781
[github]
    user = JohnPlummer
[url "git@github.com:"]
    insteadOf = https://github.com/
[core]
    excludesfile = ~/.gitignore_global
    editor = vim
[rebase]
    instructionFormat = "[%an - %ar] %s"
    autoStash = true
[push]
    # push will only do the current branch, not all branches
    default = current
[branch]
    # set up 'git pull' to rebase instead of merge
    autosetuprebase = always
[pull]
    rebase = true
[credential]
    helper = osxkeychain
[commit]
    gpgsign = true
[gpg]
    program = /usr/local/bin/gpg
[diff]
    tool = default-difftool
[difftool "default-difftool"]
    cmd = code --wait --diff $LOCAL $REMOTE
[init]
    templatedir = ~/.dotfiles/git/templates
[alias]
    # list all aliases
    la = "!git config -l | grep alias | cut -c 7-"

    st = status
    ci = commit
    cim = commit -m
    co = checkout
    cob = checkout -b
    di = diff
    dc = diff --cached
    amend = commit --amend
    aa = add --all
    ai = add --interactive
    ff = merge --ff-only
    pullff = pull --ff-only
    pro = pull --rebase origin
    noff = merge --no-ff
    fa = fetch --all
    pa = push --all
    pt = push --tags
    b = branch
    ho = open

    rbom = "!git fetch && git rebase origin/master"
    push-and-stage = "git push && stage"
    
    # open in github
    open = !sh -c "ls > /dev/null;open `git remote -v | grep fetch | awk '{print $2}' | sed 's|git@|http://|' | sed 's|com:|com/|' | head -n1`"

    cleanup = "!git remote prune origin && git gc && git clean -df && git stash clear"
    delete-merged-branches = "!f() { git checkout --quiet master && git branch --merged | grep --invert-match '\\*' | xargs -n 1 git branch --delete; git checkout --quiet @{-1}; }; f"

    # show what I did today
    day = "!sh -c 'git log --reverse --no-merges --branches=* --date=local --after=\"yesterday 11:59PM\" --author=\"`git config --get user.name`\"'"

    # show the committers in the last 100 commits, sorted by who has commited the most
    review = "!git log --no-merges --pretty=%an | head -n 100 | sort | uniq -c | sort -nr"

    # order files by number of commits, ascending
    # Written by Corey Haines
    # Scriptified by Gary Bernhardt
    # Show churn for a time range:
    #   $ git churn --since='1 month ago'
    churn = "!f() { git log --all -M -C --name-only --format='format:' \"$@\" | sort | grep -v '^$' | uniq -c | sort | awk 'BEGIN {print \"count\tfile\"} {print $1 \"\t\" $2}' | sort -g; }; f"

    # show all deleted files in the repo
    deleted = "!git log --diff-filter=D --summary | grep delete"

    # show number of commits per contributer, sorted
    count = shortlog -sn

    undo = reset --soft HEAD~1

    # rebase the current branch with changes from upstream remote
    update = !git fetch upstream && git rebase upstream/`git rev-parse --abbrev-ref HEAD`

[color]
    diff = auto
    status = auto
    branch = auto
    interactive = auto
    ui = auto
[color "branch"]
    current = green bold
    local = green
    remote = red bold
[color "diff"]
    meta = yellow bold
    frag = magenta bold
    old = red bold
    new = green bold
[color "status"]
    added = green bold
    changed = yellow bold
    untracked = red
[color "sh"]
    branch = yellow
[fetch]
	prune = true
