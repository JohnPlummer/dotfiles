#!/usr/bin/env ruby
# This script fetches staging, resets the test database, then merges your current branch to it
require 'octokit'

rails = system("grep 'rails' 'Gemfile' > /dev/null 2> /dev/null")
puts "In a Rails project" if rails

repo_name = `basename -s .git $(git config --get remote.origin.url)`.strip()
puts "🔎  Detecting repo name: #{repo_name}"
branch_name = `git rev-parse --abbrev-ref HEAD`
branch_name.strip!
puts "🔎  Detecting branch name: #{branch_name}"
if %w(staging master).include? branch_name
  abort <<-ECHO
🛑  Oh noes!
You probably don't want to use this script from `#{branch_name}`...
ECHO
end

env_var = 'STAGING_RESET_GITHUB_TOKEN'
access_token = ENV[env_var]

if access_token.nil?
  abort <<-ECHO
🔐  Oh noes!
Please create a Github access token and put it in the #{env_var} env var.
You'll need all the 'repo' scopes so we can access the private `#{repo_name}` repo.
More info: https://help.github.com/articles/creating-a-personal-access-token-for-the-command-line/
ECHO
end

github = Octokit::Client.new(access_token: access_token)

begin
  github.repo("deliveroo/#{repo_name}")
rescue Octokit::Forbidden
  abort <<-ECHO
🔐  Oh noes!
The Github access token needs to be granted SSO access for the Deliveroo org
More info: https://help.github.com/articles/authenticating-to-a-github-organization-with-saml-single-sign-on/
ECHO
end

def cmd(cmd, reason, emoji = '✅')
  STDOUT.write "⏱  #{reason}"
  success = system("#{cmd} > /dev/null 2> /dev/null")
  abort "\r🛑\n⚠️  Could not execute: #{cmd}" unless success
  puts "\r#{emoji}"
end

cmd 'git fetch origin staging', 'Updating your local copy of staging'
cmd 'git checkout staging', 'Swapping to your staging branch'
cmd 'git reset origin/staging --hard', 'Carrying out a hard reset on staging branch'
if rails
  cmd 'RAILS_ENV=test bundle exec rake db:migrate:reset', 'reseting the test database'
end
message = "Merge branch #{branch_name} into staging"
cmd "git merge #{branch_name} -q -m '#{message}'", message


puts <<-ECHO
🎉  `#{branch_name}` successfully merged into latest staging and test database reset

Next steps:
🙇  bundle exec rspec
🙇  git push

ECHO

