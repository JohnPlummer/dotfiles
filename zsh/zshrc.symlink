# Detect which `ls` flavor is in use
if ls --color > /dev/null 2>&1; then # GNU `ls`
    colorflag="--color"
else # macOS `ls`
    colorflag="-G"
fi

# initialize autocomplete
autoload -U compinit add-zsh-hook
compinit

prepend_path /usr/local/sbin
prepend_path $DOTFILES/bin
prepend_path $HOME/Dropbox/bin
prepend_path $HOME/bin

setopt NO_BG_NICE
setopt NO_HUP
setopt NO_LIST_BEEP
setopt LOCAL_OPTIONS
setopt LOCAL_TRAPS
setopt PROMPT_SUBST

# exclude git ignored files from fzf
export FZF_DEFAULT_COMMAND='rg -l ""'
# To apply the command to CTRL-T as well
export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"

# history
HISTFILE=$HOME/.zsh_history
HISTSIZE=10000
SAVEHIST=10000
setopt EXTENDED_HISTORY
setopt HIST_REDUCE_BLANKS
setopt SHARE_HISTORY
setopt HIST_IGNORE_ALL_DUPS

setopt COMPLETE_ALIASES

# matches case insensitive for lowercase
zstyle ':completion:*' matcher-list 'm:{a-z}={A-Z}'

# pasting with tabs doesn't perform completion
zstyle ':completion:*' insert-tab pending

# default to file completion
zstyle ':completion:*' completer _expand _complete _files _correct _approximate

# source all .zsh files inside of the zsh/ directory
source "$DOTFILES/zsh/utils.zsh"
source "$DOTFILES/zsh/prompt.zsh"
source "$DOTFILES/zsh/aliases.zsh"
source "$DOTFILES/zsh/fzf.zsh"

########################################################
# Plugin setup
########################################################

export ZPLUGDIR="$CACHEDIR/zsh/plugins"
[[ -d "$ZPLUGDIR" ]] || mkdir -p "$ZPLUGDIR"
# array containing plugin information (managed by zfetch)
typeset -A plugins

zfetch $ZPLUGDIR zsh-users/zsh-syntax-highlighting
zfetch $ZPLUGDIR zsh-users/zsh-autosuggestions
zfetch $ZPLUGDIR chriskempson/base16-shell

[[ -e $HOME/.terminfo ]] && export TERMINFO_DIRS=$HOME/.terminfo:/usr/share/terminfo

########################################################
# Setup
########################################################

# Emacs-like bindings for insert mode (and terminal)
bindkey -M viins "^A" beginning-of-line
bindkey -M viins "^E" vi-add-eol
bindkey -M viins "^K" kill-line
bindkey -M viins "^U" backward-kill-line
bindkey -M viins "^W" backward-kill-word
bindkey -M viins "^Y" yank
bindkey -M viins "^_" undo
# forward / backword word more useful than forward / backward chor
bindkey -M viins "^F" vi-forward-word
bindkey -M viins "^B" vi-backward-word

#z.lua
eval "$(lua $DOTFILES/bin/z.lua --init zsh)"

########################################################
# Ruby
########################################################

# Load rbenv automatically
eval "$(rbenv init -)"

########################################################
# Golang
########################################################

# Install tools to $HOME/golib
export GOPATH=$HOME/golib
prepend_path $GOPATH/bin
export GOPATH=$GOPATH:$CODE_DIR/go:$ROO_CODE_DIR/go

# Staging reset script
export STAGING_RESET_GITHUB_TOKEN=this-should-be-in-.localrc

# source .localrc for stuff that should not be commited (this should be last)
if [[ -a $HOME/.localrc ]]; then
    source $HOME/.localrc
fi

